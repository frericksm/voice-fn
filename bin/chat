#!/bin/bash

# Simulflow Text Chat Demo
# Interactive text-based chat with AI using simulflow

set -e

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
BLUE='\033[0;34m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

# Function to print colored output
print_color() {
    echo -e "${1}${2}${NC}"
}

# Check if we're in the right directory
if [ ! -f "deps.edn" ]; then
    print_color $RED "‚ùå Error: This script must be run from the simulflow project root directory"
    exit 1
fi

# Check if secrets.edn exists
if [ ! -f "resources/secrets.edn" ]; then
    print_color $RED "‚ùå Error: resources/secrets.edn not found"
    print_color $YELLOW "Please create resources/secrets.edn with your OpenAI API key:"
    echo '{:openai {:new-api-sk "your-openai-api-key-here"}}'
    exit 1
fi

# Parse command line arguments
ARGS=""
HELP=false

while [[ $# -gt 0 ]]; do
    case $1 in
        --debug)
            ARGS="$ARGS --debug"
            shift
            ;;
        --scenario)
            ARGS="$ARGS --scenario"
            shift
            ;;
        --help|-h)
            HELP=true
            shift
            ;;
        *)
            print_color $RED "‚ùå Unknown option: $1"
            HELP=true
            shift
            ;;
    esac
done

# Show help
if [ "$HELP" = true ]; then
    echo "Simulflow Text Chat Demo"
    echo ""
    echo "Usage: $0 [OPTIONS]"
    echo ""
    echo "Options:"
    echo "  --debug     Enable debug mode (verbose logging)"
    echo "  --scenario  Use a scenario (structured conversation)"
    echo "  --help, -h  Show this help message"
    echo ""
    echo "Examples:"
    echo "  $0                # Start normal open-ended chat"
    echo "  $0 --debug        # Start with debug logging"
    echo "  $0 --scenario     # Start with a scenario"
    echo "  $0 --debug --scenario  # Debug mode with scenario"
    echo ""
    echo "Once running:"
    echo "  ‚Ä¢ Type messages and press Enter"
    echo "  ‚Ä¢ Input is blocked while assistant responds"
    echo "  ‚Ä¢ Ask to 'quit chat' to exit gracefully (normal chat)"
    echo "  ‚Ä¢ Scenario will end automatically when complete"
    echo "  ‚Ä¢ Use Ctrl+C to force exit"
    exit 0
fi

# Show startup banner
print_color $GREEN "üöÄ Starting Simulflow Text Chat Demo..."
print_color $BLUE "üìÅ Project: $(pwd)"

if [[ "$ARGS" == *"--debug"* ]]; then
    print_color $YELLOW "üêõ Debug mode enabled"
fi

if [[ "$ARGS" == *"--scenario"* ]]; then
    print_color $YELLOW "üé≠ Scenario mode enabled"
fi

print_color $GREEN "üîß Loading Clojure dependencies..."

# Run the chat demo
print_color $GREEN "ü§ñ Launching interactive chat..."
echo ""

exec clj -M:with-examples -m simulflow-examples.text-chat $ARGS
